{"version":3,"sources":["../node_modules/@material-ui/lab/esm/Timeline/TimelineContext.js","../node_modules/@material-ui/lab/esm/Timeline/Timeline.js","../node_modules/@material-ui/lab/esm/TimelineItem/TimelineItemContext.js","../node_modules/@material-ui/lab/esm/TimelineItem/TimelineItem.js","../node_modules/@material-ui/lab/esm/TimelineSeparator/TimelineSeparator.js","../node_modules/@material-ui/lab/esm/TimelineConnector/TimelineConnector.js","../node_modules/@material-ui/lab/esm/TimelineContent/TimelineContent.js","../node_modules/@material-ui/lab/esm/TimelineDot/TimelineDot.js","../node_modules/@material-ui/lab/esm/TimelineOppositeContent/TimelineOppositeContent.js","components/analytics/Timeline.js","components/analytics/Analytics.js","services/trackingService.js"],"names":["TimelineContext","React","Timeline","props","ref","_props$align","align","classes","className","other","_objectWithoutProperties","Provider","value","_extends","clsx","root","concat","capitalize","withStyles","display","flexDirection","padding","flexGrow","alignLeft","alignRight","alignAlternate","name","TimelineItemContext","TimelineItem","_React$useContext$ali","hasOppositeContent","forEach","children","child","isMuiElement","content","oppositeContent","missingOppositeContent","listStyle","position","minHeight","textAlign","flex","TimelineSeparator","alignItems","TimelineConnector","theme","width","backgroundColor","palette","grey","TimelineContent","_React$useContext2$cl","contextClasses","TimelineDot","_props$color","color","_props$variant","variant","alignSelf","borderStyle","borderWidth","borderRadius","boxShadow","shadows","marginTop","marginBottom","defaultGrey","borderColor","outlinedGrey","contrastText","defaultPrimary","primary","main","outlinedPrimary","defaultSecondary","secondary","outlinedSecondary","TimelineOppositeContent","muiName","marginRight","useStyles","makeStyles","BasicTimeline","historyData","map","snip","length","time","company_name","product_name","unit_start","unit_end","spacing","container","paddingTop","paddingRight","paddingBottom","flexWrap","xtraMargin","initialValues","productCode","Analytics","useState","formInput","setFormInput","showTimeLine","setTimeLine","data","setData","handleHistory","product_code","a","fetchHistory","Paper","Typography","TextField","label","id","onChange","event","target","size","Button","onClick","productId","axios","get","params","response","console","error","postHistory","date_ob","Date","date","getDate","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","post","log"],"mappings":"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","file":"static/js/8.6ce7886e.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TimelineContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TimelineContext.displayName = 'TimelineContext';\n}\n\nexport default TimelineContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from './TimelineContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: '6px 16px',\n      flexGrow: 1\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {},\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {},\n\n    /* Styles applied to the root element if `align=\"alternate\"`. */\n    alignAlternate: {}\n  };\n};\nvar Timeline = /*#__PURE__*/React.forwardRef(function Timeline(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'left' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(TimelineContext.Provider, {\n    value: {\n      align: align\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    className: clsx(classes.root, classes[\"align\".concat(capitalize(align))], className),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Timeline.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The position where the timeline's content should appear.\n   */\n  align: PropTypes.oneOf(['alternate', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimeline'\n})(Timeline);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TimelineItemContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  TimelineItemContext.displayName = 'TimelineItemContext';\n}\n\nexport default TimelineItemContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize, isMuiElement } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport TimelineItemContext from './TimelineItemContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      listStyle: 'none',\n      display: 'flex',\n      position: 'relative',\n      minHeight: 70\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {},\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"alternate\"`. */\n    alignAlternate: {\n      '&:nth-child(even)': {\n        flexDirection: 'row-reverse',\n        '& $content': {\n          textAlign: 'right'\n        },\n        '& $oppositeContent': {\n          textAlign: 'left'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if no there isn't TimelineOppositeContent provided. */\n    missingOppositeContent: {\n      '&:before': {\n        content: '\"\"',\n        flex: 1,\n        padding: '6px 16px'\n      }\n    },\n\n    /* Styles applied to the timeline content node. */\n    content: {},\n\n    /* Styles applied to the timeline opposite content node. */\n    oppositeContent: {}\n  };\n};\nvar TimelineItem = /*#__PURE__*/React.forwardRef(function TimelineItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      _React$useContext$ali = _React$useContext.align,\n      align = _React$useContext$ali === void 0 ? 'left' : _React$useContext$ali;\n\n  var hasOppositeContent = false;\n  React.Children.forEach(props.children, function (child) {\n    if (isMuiElement(child, ['TimelineOppositeContent'])) {\n      hasOppositeContent = true;\n    }\n  });\n  return /*#__PURE__*/React.createElement(TimelineItemContext.Provider, {\n    value: {\n      classes: {\n        content: classes.content,\n        oppositeContent: classes.oppositeContent\n      }\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", _extends({\n    className: clsx(classes.root, classes[\"align\".concat(capitalize(align))], className, !hasOppositeContent && classes.missingOppositeContent),\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineItem'\n})(TimelineItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      flex: 0,\n      alignItems: 'center'\n    }\n  };\n};\nvar TimelineSeparator = /*#__PURE__*/React.forwardRef(function TimelineSeparator(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineSeparator.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineSeparator'\n})(TimelineSeparator);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      width: 2,\n      backgroundColor: theme.palette.grey[400],\n      flexGrow: 1\n    }\n  };\n};\nvar TimelineConnector = /*#__PURE__*/React.forwardRef(function TimelineConnector(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineConnector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineConnector'\n})(TimelineConnector);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport TimelineItemContext from '../TimelineItem/TimelineItemContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: 1,\n      padding: '6px 16px'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    }\n  };\n};\nvar TimelineContent = /*#__PURE__*/React.forwardRef(function TimelineContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      _React$useContext$ali = _React$useContext.align,\n      align = _React$useContext$ali === void 0 ? 'left' : _React$useContext$ali;\n\n  var _React$useContext2 = React.useContext(TimelineItemContext),\n      _React$useContext2$cl = _React$useContext2.classes,\n      contextClasses = _React$useContext2$cl === void 0 ? {} : _React$useContext2$cl;\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, contextClasses.content, classes[\"align\".concat(capitalize(align))], className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineContent'\n})(TimelineContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      alignSelf: 'baseline',\n      borderStyle: 'solid',\n      borderWidth: 2,\n      padding: 4,\n      borderRadius: '50%',\n      boxShadow: theme.shadows[2],\n      marginTop: 8,\n      marginBottom: 8\n    },\n\n    /* Styles applied to the root element if `color=\"grey\"` and `variant=\"default\"`. */\n    defaultGrey: {\n      borderColor: 'transparent',\n      color: theme.palette.grey[50],\n      backgroundColor: theme.palette.grey[400]\n    },\n\n    /* Styles applied to the root element if `color=\"grey\"` and `variant=\"outlined\"`. */\n    outlinedGrey: {\n      boxShadow: 'none',\n      color: theme.palette.grey.contrastText,\n      borderColor: theme.palette.grey[400],\n      backgroundColor: 'transparent'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"` and `variant=\"default\"`. */\n    defaultPrimary: {\n      borderColor: 'transparent',\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    outlinedPrimary: {\n      boxShadow: 'none',\n      backgroundColor: 'transparent',\n      borderColor: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"` and `variant=\"default\"`. */\n    defaultSecondary: {\n      borderColor: 'transparent',\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    outlinedSecondary: {\n      boxShadow: 'none',\n      backgroundColor: 'transparent',\n      borderColor: theme.palette.secondary.main\n    }\n  };\n};\nvar TimelineDot = /*#__PURE__*/React.forwardRef(function TimelineDot(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'grey' : _props$color,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"\".concat(variant).concat(capitalize(color))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineDot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The dot can have a different colors.\n   */\n  color: PropTypes.oneOf(['grey', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The dot can appear filled or outlined.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTimelineDot'\n})(TimelineDot);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { capitalize } from '@material-ui/core/utils';\nimport { withStyles } from '@material-ui/core/styles';\nimport TimelineContext from '../Timeline/TimelineContext';\nimport TimelineItemContext from '../TimelineItem/TimelineItemContext';\nexport var styles = function styles() {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      padding: '6px 16px',\n      marginRight: 'auto',\n      textAlign: 'right',\n      flex: 1\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'left'\n    }\n  };\n};\nvar TimelineOppositeContent = /*#__PURE__*/React.forwardRef(function TimelineOppositeContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var _React$useContext = React.useContext(TimelineContext),\n      _React$useContext$ali = _React$useContext.align,\n      align = _React$useContext$ali === void 0 ? 'left' : _React$useContext$ali;\n\n  var _React$useContext2 = React.useContext(TimelineItemContext),\n      _React$useContext2$cl = _React$useContext2.classes,\n      contextClasses = _React$useContext2$cl === void 0 ? {} : _React$useContext2$cl;\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, contextClasses.oppositeContent, classes[\"align\".concat(capitalize(align))], className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TimelineOppositeContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nTimelineOppositeContent.muiName = 'TimelineOppositeContent';\nexport default withStyles(styles, {\n  name: 'MuiTimelineOppositeContent'\n})(TimelineOppositeContent);","import { React } from 'react';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\n//import Chip from '@material-ui/core/Chip';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    oppositeContent: {\n      // TODO: adjust this value accordingly\n      flex: 0.1,\n      content: \"\"\n    },\n}));\n\nexport default function BasicTimeline({ historyData }) {\n    const classes = useStyles();\n\n    //console.log(historyData)\n    \n    return(\n    <div>\n      {historyData ? historyData.map(snip => {\n        if(historyData[historyData.length-1] === snip){\n          return(\n            <TimelineItem key={snip.time}>\n              <TimelineOppositeContent\n                className={classes.oppositeContent}\n                color=\"textSecondary\"\n              >\n                { snip.time }\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n              <TimelineDot variant=\"outlined\" color=\"primary\"/>\n              \n              </TimelineSeparator>\n            <TimelineContent>\n                { snip.company_name +\" holds \" + snip.product_name + \" from \" + snip.unit_start +\" from \" + snip.unit_end }\n              </TimelineContent>\n            </TimelineItem>\n          )  \n        }\n        else {\n          return(\n            <TimelineItem key={snip.time}>\n              <TimelineOppositeContent\n                className={classes.oppositeContent}\n                color=\"textSecondary\"\n              >\n                { snip.time }\n              </TimelineOppositeContent>\n              <TimelineSeparator>\n              <TimelineDot variant=\"outlined\" color=\"primary\"/>\n              <TimelineConnector />\n              </TimelineSeparator>\n            <TimelineContent>\n                { snip.company_name +\" holds \" + snip.product_name + \" from \" + snip.unit_start +\" to \" + snip.unit_end }\n              </TimelineContent>\n            </TimelineItem>\n          )\n        }\n        \n      }): null}\n    </div>\n    )\n}","import { React, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Timeline from '@material-ui/lab/Timeline';\nimport Typography from '@material-ui/core/Typography';\nimport BasicTimeline from './Timeline';\nimport { fetchHistory } from '../../services/trackingService';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        paddingTop: theme.spacing(2),\n        paddingRight: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n        flexWrap: 'wrap',\n    },\n    xtraMargin: {\n        marginRight: theme.spacing(1),\n    }\n}));\n\nconst initialValues = {\n    productCode: \"\",\n};\n\nfunction Analytics() {\n\n    const classes = useStyles();\n\n    const [formInput, setFormInput] = useState(initialValues);\n\n    const [showTimeLine, setTimeLine] = useState(false);\n\n    const [data, setData] = useState([])\n\n    const handleFormChange = (event) => {\n\n        const { name, value } = event.target;\n        setFormInput({ [name]: value });\n    \n    };\n\n    const handleHistory = async(product_code) => {\n        setTimeLine(false)\n        //setProductCode(product_code)\n        setTimeLine(true)\n        let historyData = await fetchHistory(formInput.productCode)\n        setData(historyData)\n        //console.log(data)\n    }\n\n    return (\n        <div className={classes.root}>\n            \n            <Paper className={classes.root} variant=\"outlined\">\n                <Typography color=\"textSecondary\" variant=\"h6\" >Analytics</Typography>\n\n                <div className={classes.container}>\n                    <TextField className={classes.xtraMargin}\n                        label=\"Product Code\"\n                        id=\"outlined-size-small\"\n                        value={formInput.productCode}\n                        onChange={handleFormChange}\n                        name=\"productCode\"\n                        variant=\"outlined\"\n                        size=\"small\" \n                    />\n\n                    <Button \n                        variant=\"outlined\"\n                        size=\"medium\"\n                        color=\"primary\"\n                        onClick={() => handleHistory(formInput.productCode)}\n                        >\n                        TRACK\n                    </Button>\n                </div>\n                <div>\n                    {showTimeLine? \n                    <Timeline align=\"left\">\n                        <BasicTimeline historyData={data}/>\n                    </Timeline> : null}\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nexport default Analytics\n\n","import axios from  'axios'\n\nconst fetchHistory = async(productCode, productId) => {\n    try {\n        //console.log(\"Tracking Service\", productCode, productId)\n        const response = await axios.get('https://opencaps-backend.herokuapp.com/history', {params: {product_code: productCode}});\n        //console.log(\"Response\", response);\n        return response.data;\n    } catch(error) {\n        console.error(error);\n    }\n}\n\nconst postHistory = async(product_name, product_code, company_name, unit_start, unit_end) => {\n    let date_ob = new Date();\n    // current date\n    // adjust 0 before single digit date\n    let date = (\"0\" + date_ob.getDate()).slice(-2);\n    // current month\n    let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n    // current year\n    let year = date_ob.getFullYear();\n    // current hours\n    let hours = date_ob.getHours();\n    // current minutes\n    let minutes = date_ob.getMinutes();\n    // current seconds\n    let seconds = date_ob.getSeconds();\n    // prints date in YYYY-MM-DD format\n    //console.log(year + \"-\" + month + \"-\" + date);\n    // prints date & time in YYYY-MM-DD HH:MM:SS format\n    let time = year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    \n    try {\n        axios.post('https://opencaps-backend.herokuapp.com/history', {\n            time: time,\n            product_name: product_name,\n            product_code: product_code,\n            company_name: company_name,\n            unit_start: unit_start,\n            unit_end: unit_end,\n        })\n    } catch(error) {\n        console.log(error)\n    }\n}\n\nexport { fetchHistory, postHistory }"],"sourceRoot":""}